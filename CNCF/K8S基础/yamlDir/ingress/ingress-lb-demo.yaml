# ingress-lb-demo.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-lb-demo-my-nginx
spec:
  selector:
    matchLabels:
      app: ingress-lb-demo-my-nginx
  template:
    metadata:
      labels:
        app: ingress-lb-demo-my-nginx
    spec:
      containers:
        - name: ingress-lb-demo-my-nginx
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-lb-demo-my-nginx
  labels:
    app: ingress-lb-demo-my-nginx
spec:
  ports:
    - port: 80
      protocol: TCP
      name: http
  selector:
    app: ingress-lb-demo-my-nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-lb-demo-my-nginx
  namespace: default
spec:
  ingressClassName: nginx # 使用 nginx 的 IngressClass（关联的 ingress-nginx 控制器）
  rules:
    - host: first-ingress.192.168.220.10.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service: # 将所有请求发送到 ingress-lb-demo-my-nginx 服务的 80 端口
                name: ingress-lb-demo-my-nginx
                port:
                  number: 80
# 不过需要注意大部分Ingress控制器都不是直接转发到Service
# 而是只是通过Service来获取后端的Endpoints列表，直接转发到Pod，这样可以减少网络跳转，提高性能
